Coverage Report by instance with details

=================================================================================
=== Instance: /alsu_top/alsu_if
=== Design Unit: work.alsu_interface
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        124       124         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /alsu_top/alsu_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            A[2-0]           1           1      100.00 
                                            B[2-0]           1           1      100.00 
                                          bypass_A           1           1      100.00 
                                          bypass_B           1           1      100.00 
                                               cin           1           1      100.00 
                                               clk           1           1      100.00 
                                         direction           1           1      100.00 
                                        leds[15-0]           1           1      100.00 
                                    leds_ref[15-0]           1           1      100.00 
                                       opcode[2-0]           1           1      100.00 
                                          out[5-0]           1           1      100.00 
                                      out_ref[5-0]           1           1      100.00 
                                          red_op_A           1           1      100.00 
                                          red_op_B           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 

Total Node Count     =         62 
Toggled Node Count   =         62 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (124 of 124 bins)

=================================================================================
=== Instance: /alsu_top/alsu_dut/alsu_SVA_inst
=== Design Unit: work.alsu_SVA
=================================================================================

Assertion Coverage:
    Assertions                      18        17         1    94.44%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/alsu_top/alsu_dut/alsu_SVA_inst/reset_assertion/rst_out_ass
                     alsu_SVA.sv(6)                     0          1
/alsu_top/alsu_dut/alsu_SVA_inst/reset_assertion/rst_leds_ass
                     alsu_SVA.sv(7)                     0          1
/alsu_top/alsu_dut/alsu_SVA_inst/invalid_or_xor_ass
                     alsu_SVA.sv(86)                  122          1
/alsu_top/alsu_dut/alsu_SVA_inst/invalid_opcode_6_7_ass
                     alsu_SVA.sv(87)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/bypass_A_assert
                     alsu_SVA.sv(88)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/bypass_B_assert
                     alsu_SVA.sv(89)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/bitwise_or_ass
                     alsu_SVA.sv(90)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_A_or_ass
                     alsu_SVA.sv(91)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_B_or_ass
                     alsu_SVA.sv(92)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/bitwise_xor_ass
                     alsu_SVA.sv(93)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_A_xor_ass
                     alsu_SVA.sv(94)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_B_xor_ass
                     alsu_SVA.sv(95)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/add_ass
                     alsu_SVA.sv(96)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/mult_ass
                     alsu_SVA.sv(97)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/shift_left_ass
                     alsu_SVA.sv(98)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/shift_right_ass
                     alsu_SVA.sv(99)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/rotate_left_ass
                     alsu_SVA.sv(100)                   0          1
/alsu_top/alsu_dut/alsu_SVA_inst/rotate_right_ass
                     alsu_SVA.sv(101)                   0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         2         0   100.00%

================================Branch Details================================

Branch Coverage for instance /alsu_top/alsu_dut/alsu_SVA_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_SVA.sv
------------------------------------IF Branch------------------------------------
    5                                        996     Count coming in to IF
    5               1                         54             if (alsu_if.rst) begin
                                             942     All False Count
Branch totals: 2 hits of 2 branches = 100.00%



Directive Coverage:
    Directives                      16        16         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/alsu_top/alsu_dut/alsu_SVA_inst/invalid_or_xor_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(104) 449 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/invalid_opcode_6_7_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(105)  87 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/bypass_A_assert_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(106)  25 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/bypass_B_assert_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(107)  24 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/bitwise_or_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(108)  62 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_A_or_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(109)  29 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_B_or_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(110)  15 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/bitwise_xor_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(111)  82 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_A_xor_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(112)  28 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_B_xor_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(113)  19 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/add_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(114)  28 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/mult_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(115)  27 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/shift_left_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(116)  29 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/shift_right_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(117)  10 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/rotate_left_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(118)  14 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/rotate_right_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(119)  10 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /alsu_top/alsu_dut/alsu_SVA_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_SVA.sv
    1                                                module alsu_SVA (alsu_interface.SVA alsu_if);
    2                                                
    3                                                    // out and leds when reset is asserted
    4               1                        996         always_comb begin : reset_assertion


=================================================================================
=== Instance: /alsu_top/alsu_dut
=== Design Unit: work.ALSU
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        31        31         0   100.00%

================================Branch Details================================

Branch Coverage for instance /alsu_top/alsu_dut

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.v
------------------------------------IF Branch------------------------------------
    23                                      1039     Count coming in to IF
    23              1                         65       if(rst) begin
    34              1                        974       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                      1039     Count coming in to IF
    50              1                         65       if(rst) begin
    52              1                        974       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                       974     Count coming in to IF
    53              1                        501           if (invalid)
    55              1                        473           else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    62                                      1038     Count coming in to IF
    62              1                         64       if(rst) begin
    65              1                        974       else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                       974     Count coming in to IF
    66              1                        501         if (invalid) 
    68              1                          3         else if (bypass_A_reg && bypass_B_reg)
    70              1                         42         else if (bypass_A_reg)
    72              1                         39         else if (bypass_B_reg)
    74              1                        389         else begin
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    75                                       389     Count coming in to CASE
    76              1                        139               0: begin 
    86              1                        130               1: begin
    96              1                         28               2: begin
    104             1                         27               3: out <= A_reg * B_reg;
    105             1                         40               4: begin
    111             1                         25               5: begin
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    77                                       139     Count coming in to IF
    77              1                         21                 if (red_op_A_reg && red_op_B_reg)
    79              1                          9                 else if (red_op_A_reg) 
    81              1                         15                 else if (red_op_B_reg)
    83              1                         94                 else 
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                       130     Count coming in to IF
    87              1                         16                 if (red_op_A_reg && red_op_B_reg)
    89              1                         12                 else if (red_op_A_reg) 
    91              1                         19                 else if (red_op_B_reg)
    93              1                         83                 else 
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    106                                       40     Count coming in to IF
    106             1                         30                 if (direction_reg)
    108             1                         10                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    112                                       25     Count coming in to IF
    112             1                         15                 if (direction_reg)
    114             1                         10                 else
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         6         0   100.00%

================================Condition Details================================

Condition Coverage for instance /alsu_top/alsu_dut --

  File ALSU.v
----------------Focused Condition View-------------------
Line       68 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       77 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       87 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         8         0   100.00%

================================Expression Details================================

Expression Coverage for instance /alsu_top/alsu_dut --

  File ALSU.v
----------------Focused Expression View-----------------
Line       17 Item    1  ((red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   red_op_A_reg         Y
   red_op_B_reg         Y
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   2:          1  red_op_A_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   3:          1  red_op_B_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   4:          1  red_op_B_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   5:          1  opcode_reg[1]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   6:          1  opcode_reg[1]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   7:          1  opcode_reg[2]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])
  Row   8:          1  opcode_reg[2]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])

----------------Focused Expression View-----------------
Line       18 Item    1  (opcode_reg[1] & opcode_reg[2])
Expression totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  opcode_reg[1]_0       opcode_reg[2]                 
  Row   2:          1  opcode_reg[1]_1       opcode_reg[2]                 
  Row   3:          1  opcode_reg[2]_0       opcode_reg[1]                 
  Row   4:          1  opcode_reg[2]_1       opcode_reg[1]                 

----------------Focused Expression View-----------------
Line       19 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      48        48         0   100.00%

================================Statement Details================================

Statement Coverage for instance /alsu_top/alsu_dut --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.v
    1                                                module ALSU(A, B, cin, serial_in, red_op_A, red_op_B, opcode, bypass_A, bypass_B, clk, rst, direction, leds, out);
    2                                                parameter INPUT_PRIORITY = "A";
    3                                                parameter FULL_ADDER = "ON";
    4                                                input clk, rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    5                                                input [2:0] opcode;
    6                                                input signed [2:0] A, B;
    7                                                output reg [15:0] leds;
    8                                                output reg signed [5:0] out;
    9                                                
    10                                               reg cin_reg, red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    11                                               reg [2:0] opcode_reg;
    12                                               reg signed [2:0] A_reg, B_reg;
    13                                               
    14                                               wire invalid_red_op, invalid_opcode, invalid;
    15                                               
    16                                               //Invalid handling
    17              1                        953     assign invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);
    18              1                        868     assign invalid_opcode = opcode_reg[1] & opcode_reg[2];
    19              1                        616     assign invalid = invalid_red_op | invalid_opcode;
    20                                               
    21                                               //Registering input signals
    22              1                       1039     always @(posedge clk or posedge rst) begin
    23                                                 if(rst) begin
    24              1                         65          cin_reg <= 0;
    25              1                         65          red_op_B_reg <= 0;
    26              1                         65          red_op_A_reg <= 0;
    27              1                         65          bypass_B_reg <= 0;
    28              1                         65          bypass_A_reg <= 0;
    29              1                         65          direction_reg <= 0;
    30              1                         65          serial_in_reg <= 0;
    31              1                         65          opcode_reg <= 0;
    32              1                         65          A_reg <= 0;
    33              1                         65          B_reg <= 0;
    34                                                 end else begin
    35              1                        974          cin_reg <= cin;
    36              1                        974          red_op_B_reg <= red_op_B;
    37              1                        974          red_op_A_reg <= red_op_A;
    38              1                        974          bypass_B_reg <= bypass_B;
    39              1                        974          bypass_A_reg <= bypass_A;
    40              1                        974          direction_reg <= direction;
    41              1                        974          serial_in_reg <= serial_in;
    42              1                        974          opcode_reg <= opcode;
    43              1                        974          A_reg <= A;
    44              1                        974          B_reg <= B;
    45                                                 end
    46                                               end
    47                                               
    48                                               //leds output blinking 
    49              1                       1039     always @(posedge clk or posedge rst) begin
    50                                                 if(rst) begin
    51              1                         65          leds <= 0;
    52                                                 end else begin
    53                                                     if (invalid)
    54              1                        501             leds <= ~leds;
    55                                                     else
    56              1                        473             leds <= 0;
    57                                                 end
    58                                               end
    59                                               
    60                                               //ALSU output processing
    61              1                       1038     always @(posedge clk or posedge rst) begin
    62                                                 if(rst) begin
    63              1                         64         out <= 0;
    64                                                 end
    65                                                 else begin
    66                                                   if (invalid) 
    67              1                        501             out <= 0;
    68                                                   else if (bypass_A_reg && bypass_B_reg)
    69              1                          3           out <= (INPUT_PRIORITY == "A")? A_reg: B_reg;
    70                                                   else if (bypass_A_reg)
    71              1                         42           out <= A_reg;
    72                                                   else if (bypass_B_reg)
    73              1                         39           out <= B_reg;
    74                                                   else begin
    75                                                       case(opcode_reg)    // opcode_reg not opcode
    76                                                         0: begin 
    77                                                           if (red_op_A_reg && red_op_B_reg)
    78              1                         21                   out = (INPUT_PRIORITY == "A")? |A_reg: |B_reg; //Oring not ANDing
    79                                                           else if (red_op_A_reg) 
    80              1                          9                   out <= |A_reg;
    81                                                           else if (red_op_B_reg)
    82              1                         15                   out <= |B_reg;
    83                                                           else 
    84              1                         94                   out <= A_reg | B_reg;
    85                                                         end
    86                                                         1: begin
    87                                                           if (red_op_A_reg && red_op_B_reg)
    88              1                         16                   out <= (INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;  // XORing not ORing
    89                                                           else if (red_op_A_reg) 
    90              1                         12                   out <= ^A_reg;
    91                                                           else if (red_op_B_reg)
    92              1                         19                   out <= ^B_reg;
    93                                                           else 
    94              1                         83                   out <= A_reg ^ B_reg;
    95                                                         end
    96                                                         2: begin
    97                                                           if (FULL_ADDER == "OFF") begin  // cin should be considered as FULL_ADDER = "ON"
    98                                                             out <= A_reg + B_reg; 
    99                                                           end
    100                                                          else begin
    101             1                         28                   out <= A_reg + B_reg + cin_reg;
    102                                                          end
    103                                                        end
    104             1                         27               3: out <= A_reg * B_reg;
    105                                                        4: begin
    106                                                          if (direction_reg)
    107             1                         30                   out <= {out[4:0], serial_in_reg};
    108                                                          else
    109             1                         10                   out <= {serial_in_reg, out[5:1]};
    110                                                        end
    111                                                        5: begin
    112                                                          if (direction_reg)
    113             1                         15                   out <= {out[4:0], out[5]};
    114                                                          else
    115             1                         10                   out <= {out[0], out[5:1]};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        118       118         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /alsu_top/alsu_dut --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            A[0-2]           1           1      100.00 
                                        A_reg[2-0]           1           1      100.00 
                                            B[0-2]           1           1      100.00 
                                        B_reg[2-0]           1           1      100.00 
                                          bypass_A           1           1      100.00 
                                      bypass_A_reg           1           1      100.00 
                                          bypass_B           1           1      100.00 
                                      bypass_B_reg           1           1      100.00 
                                               cin           1           1      100.00 
                                           cin_reg           1           1      100.00 
                                               clk           1           1      100.00 
                                         direction           1           1      100.00 
                                     direction_reg           1           1      100.00 
                                           invalid           1           1      100.00 
                                    invalid_opcode           1           1      100.00 
                                    invalid_red_op           1           1      100.00 
                                        leds[15-0]           1           1      100.00 
                                       opcode[0-2]           1           1      100.00 
                                   opcode_reg[2-0]           1           1      100.00 
                                          out[5-0]           1           1      100.00 
                                          red_op_A           1           1      100.00 
                                      red_op_A_reg           1           1      100.00 
                                          red_op_B           1           1      100.00 
                                      red_op_B_reg           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 
                                     serial_in_reg           1           1      100.00 

Total Node Count     =         59 
Toggled Node Count   =         59 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (118 of 118 bins)

=================================================================================
=== Instance: /alsu_top/alsu_ref
=== Design Unit: work.ALSU_golden
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32        27         5    84.37%

================================Branch Details================================

Branch Coverage for instance /alsu_top/alsu_ref

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_golden.v
------------------------------------IF Branch------------------------------------
    14                                      1039     Count coming in to IF
    14              1                         65             if (rst) begin
    27              1                        974             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    42                                      1038     Count coming in to IF
    42              1                         64             if (rst) begin
    47              1                        501             else if (((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0 && opcode_reg != 1)) || opcode_reg==6 || opcode_reg==7) begin  // invalid output
    52              1                        473             else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                       473     Count coming in to IF
    53              1                          3                 if(bypass_a_reg && bypass_b_reg) begin
    65              1                         42                 else if (bypass_a_reg) begin
    70              1                         39                 else if (bypass_b_reg) begin
    75              1                        389                 else begin
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    76                                       389     Count coming in to CASE
    77              1                        139                     0: begin    //OR
    100             1                        130                     1: begin   //XOR
    123             1                         28                     2: begin    //Addition
    134             1                         27                     3: begin         //Multiplication
    139             1                         40                     4: begin     // shift
    149             1                         25                     5: begin    // rotate
    159             1                    ***0***                     default:   // invalid opcode
Branch totals: 6 hits of 7 branches = 85.71%

------------------------------------IF Branch------------------------------------
    78                                       139     Count coming in to IF
    78              1                         21                         if (red_op_a_reg && red_op_b_reg) begin
    86              1                          9                         else if (red_op_a_reg) begin
    90              1                         15                         else if (red_op_b_reg) begin
    94              1                         94                         else begin   // Bitwise AND
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                      130     Count coming in to IF
    101             1                         16                         if (red_op_a_reg && red_op_b_reg) begin
    109             1                         12                         else if (red_op_a_reg) begin
    113             1                         19                         else if (red_op_b_reg) begin
    117             1                         83                         else begin   // Bitwise XOR
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    140                                       40     Count coming in to IF
    140             1                         30                         if (direction_reg) begin  // shift left
    143             1                         10                         else begin   // shift right
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    150                                       25     Count coming in to IF
    150             1                         15                         if (direction_reg) begin  // rotate left
    153             1                         10                         else begin   // rotate right
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    161                                  ***0***     Count coming in to IF
    161             1                    ***0***                         if (bypass_b_reg && bypass_a_reg) begin
    170             1                    ***0***                         else if(bypass_a_reg) begin
    174             1                    ***0***                         else if (bypass_b_reg) begin
    178             1                    ***0***                         else begin
Branch totals: 0 hits of 4 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      14        12         2    85.71%

================================Condition Details================================

Condition Coverage for instance /alsu_top/alsu_ref --

  File ALSU_golden.v
----------------Focused Condition View-------------------
Line       47 Item    1  (((((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0)) && (opcode_reg != 1)) || (opcode_reg == 6)) || (opcode_reg == 7))
Condition totals: 6 of 6 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
       red_op_a_reg         Y
       red_op_b_reg         Y
  (opcode_reg != 0)         Y
  (opcode_reg != 1)         Y
  (opcode_reg == 6)         Y
  (opcode_reg == 7)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_a_reg_0        (~(opcode_reg == 7) && ~(opcode_reg == 6) && ~red_op_b_reg)
  Row   2:          1  red_op_a_reg_1        ((opcode_reg != 1) && (opcode_reg != 0))
  Row   3:          1  red_op_b_reg_0        (~(opcode_reg == 7) && ~(opcode_reg == 6) && ~red_op_a_reg)
  Row   4:          1  red_op_b_reg_1        ((opcode_reg != 1) && (opcode_reg != 0) && ~red_op_a_reg)
  Row   5:          1  (opcode_reg != 0)_0   (~(opcode_reg == 7) && ~(opcode_reg == 6) && (red_op_a_reg || red_op_b_reg))
  Row   6:          1  (opcode_reg != 0)_1   ((opcode_reg != 1) && (red_op_a_reg || red_op_b_reg))
  Row   7:          1  (opcode_reg != 1)_0   (~(opcode_reg == 7) && ~(opcode_reg == 6) && ((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0)))
  Row   8:          1  (opcode_reg != 1)_1   ((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0))
  Row   9:          1  (opcode_reg == 6)_0   (~(opcode_reg == 7) && ~(((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0)) && (opcode_reg != 1)))
 Row   10:          1  (opcode_reg == 6)_1   ~(((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0)) && (opcode_reg != 1))
 Row   11:          1  (opcode_reg == 7)_0   ~((((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0)) && (opcode_reg != 1)) || (opcode_reg == 6))
 Row   12:          1  (opcode_reg == 7)_1   ~((((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0)) && (opcode_reg != 1)) || (opcode_reg == 6))

----------------Focused Condition View-------------------
Line       53 Item    1  (bypass_a_reg && bypass_b_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_a_reg         Y
  bypass_b_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_a_reg_0        -                             
  Row   2:          1  bypass_a_reg_1        bypass_b_reg                  
  Row   3:          1  bypass_b_reg_0        bypass_a_reg                  
  Row   4:          1  bypass_b_reg_1        bypass_a_reg                  

----------------Focused Condition View-------------------
Line       78 Item    1  (red_op_a_reg && red_op_b_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_a_reg         Y
  red_op_b_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_a_reg_0        -                             
  Row   2:          1  red_op_a_reg_1        red_op_b_reg                  
  Row   3:          1  red_op_b_reg_0        red_op_a_reg                  
  Row   4:          1  red_op_b_reg_1        red_op_a_reg                  

----------------Focused Condition View-------------------
Line       101 Item    1  (red_op_a_reg && red_op_b_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_a_reg         Y
  red_op_b_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_a_reg_0        -                             
  Row   2:          1  red_op_a_reg_1        red_op_b_reg                  
  Row   3:          1  red_op_b_reg_0        red_op_a_reg                  
  Row   4:          1  red_op_b_reg_1        red_op_a_reg                  

----------------Focused Condition View-------------------
Line       161 Item    1  (bypass_b_reg && bypass_a_reg)
Condition totals: 0 of 2 input terms covered = 0.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_b_reg         N  No hits                  Hit '_0' and '_1'
  bypass_a_reg         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  bypass_b_reg_0        -                             
  Row   2:    ***0***  bypass_b_reg_1        bypass_a_reg                  
  Row   3:    ***0***  bypass_a_reg_0        bypass_b_reg                  
  Row   4:    ***0***  bypass_a_reg_1        bypass_b_reg                  


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      56        52         4    92.85%

================================Statement Details================================

Statement Coverage for instance /alsu_top/alsu_ref --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_golden.v
    1                                                module ALSU_golden (a,b,opcode,cin,serial_in,direction,red_op_a,red_op_b,bypass_a,bypass_b,clk,rst,out,leds);
    2                                                    parameter INPUT_PRIORITY = "A"; // Default
    3                                                    parameter FULL_ADDER = "ON";  // Default
    4                                                    input clk,rst,cin,serial_in,red_op_a,red_op_b,bypass_a,bypass_b,direction;
    5                                                    input signed [2:0] a,b;
    6                                                    input [2:0] opcode;
    7                                                    output reg signed [5:0] out;
    8                                                    output reg [15:0] leds; 
    9                                                    reg signed [2:0] a_reg,b_reg;
    10                                                   reg [2:0] opcode_reg;
    11                                                   reg cin_reg,serial_in_reg,red_op_a_reg,red_op_b_reg,bypass_a_reg,bypass_b_reg,direction_reg;
    12                                               
    13              1                       1039         always @(posedge clk or posedge rst) begin   
    14                                                       if (rst) begin
    15              1                         65                 a_reg <= 'b0; 
    16              1                         65                 b_reg <= 'b0;
    17              1                         65                 opcode_reg <= 'b0;
    18              1                         65                 cin_reg <= 'b0;
    19              1                         65                 serial_in_reg <= 'b0;
    20              1                         65                 direction_reg <= 'b0;
    21              1                         65                 red_op_a_reg <= 'b0;
    22              1                         65                 red_op_b_reg <= 'b0;
    23              1                         65                 bypass_a_reg <= 'b0;
    24              1                         65                 bypass_b_reg <= 'b0;
    25                                                       end
    26                                               
    27                                                       else begin
    28              1                        974                 a_reg <= a;
    29              1                        974                 b_reg <= b;
    30              1                        974                 opcode_reg <= opcode;
    31              1                        974                 cin_reg <= cin;
    32              1                        974                 serial_in_reg <= serial_in;
    33              1                        974                 direction_reg <= direction;
    34              1                        974                 red_op_a_reg <= red_op_a;
    35              1                        974                 red_op_b_reg <= red_op_b;
    36              1                        974                 bypass_a_reg <= bypass_a;
    37              1                        974                 bypass_b_reg <= bypass_b;
    38                                                       end
    39                                                   end
    40                                               
    41              1                       1038         always @(posedge clk or posedge rst) begin   
    42                                                       if (rst) begin
    43              1                         64                 out <= 'b0;
    44              1                         64                 leds <= 'b0;
    45                                                       end
    46                                               
    47                                                       else if (((red_op_a_reg || red_op_b_reg) && (opcode_reg != 0 && opcode_reg != 1)) || opcode_reg==6 || opcode_reg==7) begin  // invalid output
    48              1                        501                 out <= 'b0;
    49              1                        501                 leds <= ~leds;  //blinking 
    50                                                       end
    51                                               
    52                                                       else begin
    53                                                           if(bypass_a_reg && bypass_b_reg) begin
    54                                                               if (INPUT_PRIORITY == "B") begin
    55                                                                   out <= b_reg;
    56                                                                   leds <= 'b0;
    57                                                               end
    58                                               
    59                                                               else begin   // Default A
    60              1                          3                         out <= a_reg;
    61              1                          3                         leds <= 'b0;
    62                                                               end
    63                                                           end
    64                                               
    65                                                           else if (bypass_a_reg) begin
    66              1                         42                     out <= a_reg;
    67              1                         42                     leds <= 'b0;
    68                                                           end
    69                                               
    70                                                           else if (bypass_b_reg) begin
    71              1                         39                     out <= b_reg;
    72              1                         39                     leds <= 'b0;
    73                                                           end
    74                                               
    75                                                           else begin
    76                                                               case (opcode_reg)
    77                                                               0: begin    //OR
    78                                                                   if (red_op_a_reg && red_op_b_reg) begin
    79                                                                       if (INPUT_PRIORITY == "B") begin
    80                                                                           out <= | b_reg;
    81                                                                       end
    82                                                                       else begin   // Default A
    83              1                         21                                 out <= | a_reg;
    84                                                                       end
    85                                                                   end
    86                                                                   else if (red_op_a_reg) begin
    87              1                          9                             out <= | a_reg;
    88                                                                   end
    89                                               
    90                                                                   else if (red_op_b_reg) begin
    91              1                         15                             out <= | b_reg;
    92                                                                   end
    93                                               
    94                                                                   else begin   // Bitwise AND
    95              1                         94                             out <= a_reg | b_reg;
    96                                                                   end
    97              1                        139                         leds <= 'b0;
    98                                                               end 
    99                                               
    100                                                              1: begin   //XOR
    101                                                                  if (red_op_a_reg && red_op_b_reg) begin
    102                                                                      if (INPUT_PRIORITY == "B") begin
    103                                                                          out <= ^ b_reg;
    104                                                                      end
    105                                                                      else begin   // Default A
    106             1                         16                                 out <= ^ a_reg;
    107                                                                      end
    108                                                                  end
    109                                                                  else if (red_op_a_reg) begin
    110             1                         12                             out <= ^ a_reg;
    111                                                                  end
    112                                              
    113                                                                  else if (red_op_b_reg) begin
    114             1                         19                             out <= ^ b_reg;
    115                                                                  end
    116                                              
    117                                                                  else begin   // Bitwise XOR
    118             1                         83                             out <= a_reg ^ b_reg;
    119                                                                  end
    120             1                        130                         leds <= 'b0; 
    121                                                              end
    122                                              
    123                                                              2: begin    //Addition
    124                                                                  if (FULL_ADDER == "OFF") begin
    125                                                                      out <= a_reg + b_reg;
    126                                                                  end
    127                                              
    128                                                                  else begin     // Default ON
    129             1                         28                             out <= a_reg + b_reg + cin_reg;
    130                                                                  end
    131             1                         28                         leds <= 'b0;
    132                                                              end
    133                                              
    134                                                              3: begin         //Multiplication
    135             1                         27                         out <= a_reg * b_reg;
    136             1                         27                         leds <= 'b0;
    137                                                              end
    138                                              
    139                                                              4: begin     // shift
    140                                                                  if (direction_reg) begin  // shift left
    141             1                         30                             out <= {out[4:0],serial_in_reg};
    142                                                                  end
    143                                                                  else begin   // shift right
    144             1                         10                             out <= {serial_in_reg,out[5:1]};
    145                                                                  end
    146             1                         40                         leds <= 'b0;
    147                                                              end
    148                                              
    149                                                              5: begin    // rotate
    150                                                                  if (direction_reg) begin  // rotate left
    151             1                         15                             out <= {out[4:0],out[5]};
    152                                                                  end
    153                                                                  else begin   // rotate right
    154             1                         10                             out <= {out[0],out[5:1]};
    155                                                                  end
    156             1                         25                         leds <= 'b0;
    157                                                              end
    158                                              
    159                                                              default:   // invalid opcode
    160                                                              begin
    161                                                                  if (bypass_b_reg && bypass_a_reg) begin
    162                                                                      if (INPUT_PRIORITY == "B") begin
    163                                                                          out <= b_reg;
    164                                                                      end
    165                                                                      else begin   // Default A
    166             1                    ***0***                                 out <= a_reg;
    167                                                                      end
    168                                                                  end
    169                                              
    170                                                                  else if(bypass_a_reg) begin
    171             1                    ***0***                             out <= a_reg;
    172                                                                  end
    173                                              
    174                                                                  else if (bypass_b_reg) begin
    175             1                    ***0***                             out <= b_reg;
    176                                                                  end
    177                                                                  
    178                                                                  else begin
    179             1                    ***0***                             out<='b0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        112       112         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /alsu_top/alsu_ref --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            a[0-2]           1           1      100.00 
                                        a_reg[2-0]           1           1      100.00 
                                            b[0-2]           1           1      100.00 
                                        b_reg[2-0]           1           1      100.00 
                                          bypass_a           1           1      100.00 
                                      bypass_a_reg           1           1      100.00 
                                          bypass_b           1           1      100.00 
                                      bypass_b_reg           1           1      100.00 
                                               cin           1           1      100.00 
                                           cin_reg           1           1      100.00 
                                               clk           1           1      100.00 
                                         direction           1           1      100.00 
                                     direction_reg           1           1      100.00 
                                        leds[15-0]           1           1      100.00 
                                       opcode[0-2]           1           1      100.00 
                                   opcode_reg[2-0]           1           1      100.00 
                                          out[5-0]           1           1      100.00 
                                          red_op_a           1           1      100.00 
                                      red_op_a_reg           1           1      100.00 
                                          red_op_b           1           1      100.00 
                                      red_op_b_reg           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 
                                     serial_in_reg           1           1      100.00 

Total Node Count     =         56 
Toggled Node Count   =         56 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (112 of 112 bins)

=================================================================================
=== Instance: /alsu_top
=== Design Unit: work.alsu_top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       6         6         0   100.00%

================================Statement Details================================

Statement Coverage for instance /alsu_top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_top.sv
    5                                                module alsu_top ();
    6                                                    logic clk;
    7                                                    initial begin
    8               1                          1             clk = 0;
    9               1                          1             forever begin
    10              1                       2015                 #1 clk = ~clk;
    10              2                       2014     
    11                                                       end
    12                                                   end
    13                                               
    14                                                   alsu_interface alsu_if (clk);
    15                                               
    16                                                   ALSU alsu_dut (alsu_if.A, alsu_if.B, alsu_if.cin, alsu_if.serial_in,
    17                                                   alsu_if.red_op_A, alsu_if.red_op_B, alsu_if.opcode, alsu_if.bypass_A, alsu_if.bypass_B, alsu_if.clk, alsu_if.rst, alsu_if.direction, alsu_if.leds, alsu_if.out);
    18                                               
    19                                                   ALSU_golden alsu_ref (alsu_if.A,alsu_if.B,alsu_if.opcode,alsu_if.cin, alsu_if.serial_in,alsu_if.direction,alsu_if.red_op_A, 
    20                                                   alsu_if.red_op_B,alsu_if.bypass_A, alsu_if.bypass_B,alsu_if.clk, alsu_if.rst,alsu_if.out_ref,alsu_if.leds_ref );
    21                                               
    22                                                   bind ALSU alsu_SVA alsu_SVA_inst(alsu_if.SVA);
    23                                               
    24                                                   initial begin
    25              1                          1             uvm_config_db #(virtual alsu_interface)::set(null , "uvm_test_top" , "ALSU_IF" , alsu_if);
    26              1                          1             run_test("alsu_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /alsu_top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /alsu_seq_item_pkg
=== Design Unit: work.alsu_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /alsu_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(alsu_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       1007     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(alsu_seq_item)
                                            1007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(alsu_seq_item)
    7               4                    ***0***             `uvm_object_utils(alsu_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       1007     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(alsu_seq_item)
                                            1007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(alsu_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /alsu_seq_item_pkg --

  File alsu_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         3        10    23.07%

================================Statement Details================================

Statement Coverage for instance /alsu_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_seq_item.sv
    1                                                package alsu_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class alsu_seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(alsu_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                       1007     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                       1007     
    7              10                    ***0***     
    8                                                
    9                                                        // randomized data inputs
    10                                                       rand logic rst;
    11                                                       rand bit cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    12                                                       rand opcode_e opcode;
    13                                                       rand logic signed [2:0] A, B;
    14                                                       logic [15:0] leds;
    15                                                       logic signed [5:0] out;
    16                                                       logic [15:0] leds_ref;
    17                                                       logic [5:0] out_ref;
    18                                               
    19                                                       // constructor
    20                                                       function new(string name = "alsu_seq_item");
    21              1                       3023                 super.new(name);
    22                                                       endfunction 
    23                                               
    24                                                       function string convert2string();
    25              1                    ***0***                 return $sformatf("%s rst= %b , cin= %b , red_op_A= %b , red_op_B= %b , bypass_A= %b , bypass_B= %b , direction= %b , serial_in= %b , opcode= %s , A= %0h , B= %0h , leds= %0h , out= %0h , leds_ref= %0h , out_ref= %0h"
    26                                                           ,super.convert2string(),rst,cin,red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in,opcode,A,B,leds,out,leds_ref,out_ref);
    27                                                       endfunction
    28                                               
    29                                                       function string convert2string_stimulus();
    30              1                    ***0***                 return $sformatf("rst= %b , cin= %b , red_op_A= %b , red_op_B= %b , bypass_A= %b , bypass_B= %b , direction= %b , serial_in= %b , opcode= %s , A= %0h , B= %0h",


=================================================================================
=== Instance: /alsu_rst_sequence_pkg
=== Design Unit: work.alsu_rst_sequence_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /alsu_rst_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_rst_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(alsu_rst_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(alsu_rst_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(alsu_rst_sequence)
    8               4                    ***0***             `uvm_object_utils(alsu_rst_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(alsu_rst_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(alsu_rst_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /alsu_rst_sequence_pkg --

  File alsu_rst_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /alsu_rst_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_rst_sequence.sv
    1                                                package alsu_rst_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import alsu_seq_item_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class alsu_rst_sequence extends uvm_sequence #(alsu_seq_item);
    8               1                    ***0***             `uvm_object_utils(alsu_rst_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                        alsu_seq_item rst_seq;
    10                                               
    11                                                       //constructor
    12                                                       function new(string name = "alsu_rst_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction  
    15                                               
    16                                                       task body ();
    17              1                          1                 rst_seq = alsu_seq_item::type_id::create("rst_seq"); // create a sequence item
    18              1                          1                 start_item(rst_seq);
    19              1                          1                 rst_seq.rst = 1;
    20              1                          1                 rst_seq.opcode = ADD;
    21              1                          1                 rst_seq.A = 1;
    22              1                          1                 rst_seq.B = 3;
    23              1                          1                 finish_item(rst_seq);


=================================================================================
=== Instance: /alsu_main_sequence_pkg
=== Design Unit: work.alsu_main_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/alsu_main_sequence_pkg/alsu_main_sequence/body/#ublk#157552951#18/immed__21
                     alsu_main_sequence.sv(21)          0          1
/alsu_main_sequence_pkg/alsu_main_sequence/body/#ublk#157552951#27/immed__32
                     alsu_main_sequence.sv(32)          0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /alsu_main_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_main_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(alsu_main_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(alsu_main_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(alsu_main_sequence)
    8               4                    ***0***             `uvm_object_utils(alsu_main_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(alsu_main_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(alsu_main_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /alsu_main_sequence_pkg --

  File alsu_main_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      23        15         8    65.21%

================================Statement Details================================

Statement Coverage for instance /alsu_main_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_main_sequence.sv
    1                                                package alsu_main_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import alsu_seq_item_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class alsu_main_sequence extends uvm_sequence #(alsu_seq_item);
    8               1                    ***0***             `uvm_object_utils(alsu_main_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                        alsu_seq_item main_seq;
    10                                               
    11                                                       //constructor
    12                                                       function new(string name = "alsu_main_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction  
    15                                               
    16                                                       task body ();
    17                                                           opcode_e opcode;
    18              1                       1000                 repeat(1000) begin
    19              1                       1000                     main_seq = alsu_seq_item::type_id::create("main_seq"); // create a sequence item
    20              1                       1000                     start_item(main_seq);
    21                                                               assert(main_seq.randomize());
    22              1                       1000                     finish_item(main_seq); 
    23                                                           end
    24                                               
    25                                                           // to get 100% functional coverage to hit trans_bins (OR => XOR => ADD => MULT => SHIFT => ROTATE)
    26              1                          1                 opcode = OR;
    27              1                          1                 for (opcode = OR; opcode <= ROTATE; opcode = opcode_e'(int'(opcode) + 1)) begin
    27              2                          6     
    28              1                          6                     main_seq = alsu_seq_item::type_id::create("main_seq"); // create a sequence item
    29              1                          6                     main_seq.opcode.rand_mode(0); // disable randomization on opcode
    30              1                          6                     start_item(main_seq);
    31              1                          6                     main_seq.opcode = opcode;
    32                                                               assert(main_seq.randomize());
    33              1                          6                     finish_item(main_seq); 


=================================================================================
=== Instance: /alsu_config_obj_pkg
=== Design Unit: work.alsu_config_obj_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /alsu_config_obj_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_config_obj.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(alsu_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(alsu_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(alsu_config_obj)
    7               4                    ***0***             `uvm_object_utils(alsu_config_obj)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(alsu_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(alsu_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /alsu_config_obj_pkg --

  File alsu_config_obj.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /alsu_config_obj_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_config_obj.sv
    1                                                package alsu_config_obj_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                
    5                                                    class alsu_config_obj extends uvm_object;
    6                                                
    7               1                    ***0***             `uvm_object_utils(alsu_config_obj)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                        virtual alsu_interface alsu_vif;
    9                                                
    10                                                       function new(string name = "alsu_config_obj");
    11              1                          1                 super.new(name);


=================================================================================
=== Instance: /alsu_driver_pkg
=== Design Unit: work.alsu_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /alsu_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_driver.sv
------------------------------------IF Branch------------------------------------
    40                                      1007     Count coming in to IF
    40              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)
                                            1007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      26        23         3    88.46%

================================Statement Details================================

Statement Coverage for instance /alsu_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_driver.sv
    1                                                package alsu_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import alsu_seq_item_pkg::*;
    4                                                    import alsu_config_obj_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class alsu_driver extends uvm_driver #(alsu_seq_item);
    8               1                    ***0***             `uvm_component_utils(alsu_driver)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       virtual alsu_interface alsu_vif;
    11                                                       alsu_seq_item stim_seq_item;
    12                                               
    13                                                       //constructor
    14                                                       function new(string name = "alsu_driver" , uvm_component parent = null);
    15              1                          1                 super.new(name,parent);
    16                                                       endfunction 
    17                                               
    18                                                       task run_phase(uvm_phase phase);
    19              1                          1                 super.run_phase(phase);
    20              1                          1                 forever begin
    21              1                       1008                     stim_seq_item = alsu_seq_item::type_id::create("stim_seq_item");
    22              1                       1008                     seq_item_port.get_next_item(stim_seq_item);
    23              1                       1007                     alsu_vif.A = stim_seq_item.A;
    24              1                       1007                     alsu_vif.B = stim_seq_item.B;
    25              1                       1007                     alsu_vif.opcode = stim_seq_item.opcode;
    26              1                       1007                     alsu_vif.cin = stim_seq_item.cin;
    27              1                       1007                     alsu_vif.red_op_A = stim_seq_item.red_op_A;
    28              1                       1007                     alsu_vif.red_op_B = stim_seq_item.red_op_B;
    29              1                       1007                     alsu_vif.bypass_A = stim_seq_item.bypass_A;
    30              1                       1007                     alsu_vif.bypass_B = stim_seq_item.bypass_B;
    31              1                       1007                     alsu_vif.serial_in = stim_seq_item.serial_in;
    32              1                       1007                     alsu_vif.direction = stim_seq_item.direction;
    33              1                       1007                     alsu_vif.rst = stim_seq_item.rst;
    34              1                       1007                     @(negedge alsu_vif.clk);
    35              1                       1007                     stim_seq_item.leds = alsu_vif.leds;
    36              1                       1007                     stim_seq_item.out = alsu_vif.out;
    37              1                       1007                     stim_seq_item.leds_ref = alsu_vif.leds_ref;
    38              1                       1007                     stim_seq_item.out_ref = alsu_vif.out_ref;
    39              1                       1007                     seq_item_port.item_done();
    40              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /alsu_sequencer_pkg
=== Design Unit: work.alsu_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /alsu_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_sequencer.sv
    1                                                package alsu_sequencer_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import alsu_seq_item_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                    
    6                                                    class alsu_sequencer extends uvm_sequencer #(alsu_seq_item);
    7               1                    ***0***             `uvm_component_utils(alsu_sequencer)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        //constructor
    10                                                       function new(string name = "alsu_sequencer" , uvm_component parent = null);
    11              1                          1                 super.new(name,parent);


=================================================================================
=== Instance: /alsu_monitor_pkg
=== Design Unit: work.alsu_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /alsu_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_monitor.sv
------------------------------------IF Branch------------------------------------
    44                                      1007     Count coming in to IF
    44              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)
                                            1007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        24         3    88.88%

================================Statement Details================================

Statement Coverage for instance /alsu_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_monitor.sv
    1                                                package alsu_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import alsu_seq_item_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class alsu_monitor extends uvm_monitor;
    8               1                    ***0***             `uvm_component_utils(alsu_monitor)
    8               2                    ***0***     
    8               3                          2     
    9                                                        virtual alsu_interface alsu_vif;
    10                                                       alsu_seq_item rsp_seq_item;
    11                                                       uvm_analysis_port #(alsu_seq_item) mon_ap;
    12                                               
    13                                                       //constructor
    14                                                       function new(string name = "alsu_monitor" , uvm_component parent = null);
    15              1                          1                 super.new(name,parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 mon_ap = new("mon_ap",this);
    21                                                       endfunction
    22                                               
    23                                                       task run_phase(uvm_phase phase);
    24              1                          1                 super.run_phase(phase);
    25              1                          1                 forever begin
    26              1                       1008                     rsp_seq_item = alsu_seq_item::type_id::create("rsp_seq_item");
    27              1                       1008                     @(negedge alsu_vif.clk);
    28              1                       1007                     rsp_seq_item.A = alsu_vif.A;
    29              1                       1007                     rsp_seq_item.B = alsu_vif.B;
    30              1                       1007                     rsp_seq_item.opcode = opcode_e'(alsu_vif.opcode);
    31              1                       1007                     rsp_seq_item.cin = alsu_vif.cin;
    32              1                       1007                     rsp_seq_item.red_op_A = alsu_vif.red_op_A;
    33              1                       1007                     rsp_seq_item.red_op_B = alsu_vif.red_op_B;
    34              1                       1007                     rsp_seq_item.bypass_A = alsu_vif.bypass_A;
    35              1                       1007                     rsp_seq_item.bypass_B = alsu_vif.bypass_B;
    36              1                       1007                     rsp_seq_item.serial_in = alsu_vif.serial_in;
    37              1                       1007                     rsp_seq_item.direction = alsu_vif.direction;
    38              1                       1007                     rsp_seq_item.rst = alsu_vif.rst;
    39              1                       1007                     rsp_seq_item.out = alsu_vif.out;
    40              1                       1007                     rsp_seq_item.leds = alsu_vif.leds;
    41              1                       1007                     rsp_seq_item.leds_ref = alsu_vif.leds_ref;
    42              1                       1007                     rsp_seq_item.out_ref = alsu_vif.out_ref;
    43              1                       1007                     mon_ap.write(rsp_seq_item);
    44              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /alsu_agent_pkg
=== Design Unit: work.alsu_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /alsu_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_agent.sv
------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              1                    ***0***                 if (!uvm_config_db #(alsu_config_obj)::get(this,"","CFG",alsu_cfg)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    29                                   ***0***     Count coming in to IF
    29              1                    ***0***                     `uvm_fatal("build_phase", "Driver - Unable to get configuration object");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /alsu_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_agent.sv
    1                                                package alsu_agent_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    import alsu_monitor_pkg::*;
    5                                                    import alsu_sequencer_pkg::*;
    6                                                    import alsu_driver_pkg::*;
    7                                                    import alsu_seq_item_pkg::*;
    8                                                    import alsu_config_obj_pkg::*;
    9                                                    `include "uvm_macros.svh"
    10                                               
    11                                                   class alsu_agent extends uvm_agent;
    12              1                    ***0***             `uvm_component_utils(alsu_agent)
    12              2                    ***0***     
    12              3                          2     
    13                                                       alsu_sequencer sqr;
    14                                                       alsu_monitor mon;
    15                                                       alsu_driver drv;    
    16                                                       alsu_config_obj alsu_cfg;
    17                                                       uvm_analysis_port #(alsu_seq_item) agt_ap;
    18                                               
    19                                                       // constructor
    20                                                       function new(string name = "alsu_agent" , uvm_component parent = null);
    21              1                          1                 super.new(name,parent);
    22                                                       endfunction
    23                                               
    24                                                       function void build_phase(uvm_phase phase);
    25              1                          1                 super.build_phase(phase);
    26                                               
    27                                                           // get the virtual interface from database
    28                                                           if (!uvm_config_db #(alsu_config_obj)::get(this,"","CFG",alsu_cfg)) begin
    29              1                    ***0***                     `uvm_fatal("build_phase", "Driver - Unable to get configuration object");
    30                                                           end
    31                                               
    32              1                          1                 sqr = alsu_sequencer::type_id::create("sqr",this);
    33              1                          1                 drv = alsu_driver::type_id::create("drv",this);
    34              1                          1                 mon = alsu_monitor::type_id::create("mon",this);
    35              1                          1                 agt_ap = new("agt_ap",this);
    36                                                           endfunction
    37                                               
    38                                                           function void connect_phase(uvm_phase phase);
    39              1                          1                     drv.alsu_vif = alsu_cfg.alsu_vif;
    40              1                          1                     mon.alsu_vif = alsu_cfg.alsu_vif;
    41              1                          1                     drv.seq_item_port.connect(sqr.seq_item_export);
    42              1                          1                     mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /alsu_scoreboard_pkg
=== Design Unit: work.alsu_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         4         6    40.00%

================================Branch Details================================

Branch Coverage for instance /alsu_scoreboard_pkg
NOTE: The modification timestamp for source file 'alsu_scoreboard.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_scoreboard.sv
------------------------------------IF Branch------------------------------------
    42                                      1007     Count coming in to IF
    42              1                    ***0***                         ,seq_item_sb.convert2string() , seq_item_sb.out_ref,seq_item_sb.leds_ref));
    47              1                       1007                         correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    43                                   ***0***     Count coming in to IF
    43              1                    ***0***                         error_count++;
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                      1007     Count coming in to IF
    48              1                    ***0***                     end
                                            1007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                         1     Count coming in to IF
    61              1                          1             endfunction
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                         1     Count coming in to IF
    62              1                          1         endclass 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /alsu_scoreboard_pkg --
NOTE: The modification timestamp for source file 'alsu_scoreboard.sv' has been altered since compilation.

  File alsu_scoreboard.sv
----------------Focused Condition View-------------------
Line       42 Item    1  ((this.seq_item_sb.out != this.seq_item_sb.out_ref) || (this.seq_item_sb.leds != this.seq_item_sb.leds_ref))
Condition totals: 0 of 2 input terms covered = 0.00%

                                            Input Term   Covered  Reason for no coverage   Hint
                                           -----------  --------  -----------------------  --------------
    (this.seq_item_sb.out != this.seq_item_sb.out_ref)         N  '_1' not hit             Hit '_1'
  (this.seq_item_sb.leds != this.seq_item_sb.leds_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                              Non-masking condition(s)      
 ---------  ---------  --------------------                                    -------------------------     
  Row   1:          1  (this.seq_item_sb.out != this.seq_item_sb.out_ref)_0    ~(this.seq_item_sb.leds != this.seq_item_sb.leds_ref)
  Row   2:    ***0***  (this.seq_item_sb.out != this.seq_item_sb.out_ref)_1    -                             
  Row   3:          1  (this.seq_item_sb.leds != this.seq_item_sb.leds_ref)_0  ~(this.seq_item_sb.out != this.seq_item_sb.out_ref)
  Row   4:    ***0***  (this.seq_item_sb.leds != this.seq_item_sb.leds_ref)_1  ~(this.seq_item_sb.out != this.seq_item_sb.out_ref)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        16         5    76.19%

================================Statement Details================================

Statement Coverage for instance /alsu_scoreboard_pkg --
NOTE: The modification timestamp for source file 'alsu_scoreboard.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_scoreboard.sv
    1                                                package alsu_scoreboard_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    import alsu_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class alsu_scoreboard extends uvm_scoreboard;
    8               1                    ***0***             `uvm_component_utils(alsu_scoreboard)
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(alsu_seq_item) sb_export;
    10                                                       uvm_tlm_analysis_fifo #(alsu_seq_item) sb_fifo;
    11                                                       alsu_seq_item seq_item_sb;
    12                                                       int error_count = 0;
    13                                                       int correct_count = 0;
    14              1                          1     
    15              1                          1             //constructor
    16                                                       function new(string name = "alsu_scoreboard" , uvm_component parent = null);
    17                                                           super.new(name,parent);
    18                                                       endfunction
    19              1                          1     
    20                                                       //build_phase
    21                                                       function void build_phase(uvm_phase phase);
    22                                                           super.build_phase(phase);
    23                                                           sb_export = new("sb_export",this);
    24              1                          1                 sb_fifo = new("sb_fifo",this);
    25              1                          1             endfunction
    26              1                          1             
    27                                                       //connect_phase
    28                                                       function void connect_phase(uvm_phase phase);
    29                                                           super.connect_phase(phase);
    30                                                           sb_export.connect(sb_fifo.analysis_export);
    31              1                          1             endfunction
    32              1                          1     
    33                                                       //run_phase
    34                                                       task run_phase(uvm_phase phase);
    35                                                           super.run_phase(phase);
    36                                                           forever begin
    37              1                          1                     sb_fifo.get(seq_item_sb);
    38              1                          1     
    39              1                       1008                     //checking
    40                                                               if (seq_item_sb.out != seq_item_sb.out_ref || seq_item_sb.leds != seq_item_sb.leds_ref) begin
    41                                                                   `uvm_error("run_phase" , $sformatf("comparison failed , transaction recieved by the DUT: %s , while the out_ref is: %0h and leds_ref: %0h"
    42                                                                   ,seq_item_sb.convert2string() , seq_item_sb.out_ref,seq_item_sb.leds_ref));
    43              1                    ***0***                         error_count++;
    44                                                               end
    45              1                    ***0***                     else begin
    46                                                                   `uvm_info("run_phase",$sformatf("correct output: %s ",seq_item_sb.convert2string()),UVM_HIGH);
    47                                                                   correct_count++;
    48              1                    ***0***                     end
    49              1                       1007                 end
    50                                                       endtask
    51                                               
    52                                                       //golden_model
    53                                                       task ref_model(alsu_seq_item seq_item_checked);
    54                                                           
    55                                                       endtask 
    56                                               
    57                                                       function void report_phase(uvm_phase phase);
    58                                                           super.report_phase(phase);
    59                                                           `uvm_info("report_phase",$sformatf("total successful transactions = %0d",correct_count),UVM_MEDIUM);
    60              1                          1                 `uvm_info("report_phase",$sformatf("total failed transactions = %0d",error_count),UVM_MEDIUM);
    61              1                          1             endfunction
    62              1                          1         endclass 


=================================================================================
=== Instance: /alsu_coverage_pkg
=== Design Unit: work.alsu_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         13        na        na        na
            Covergroup Bins         35        35         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /alsu_coverage_pkg/alsu_coverage/alsu_cvg       100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cin_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint serialin_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_op_A_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_op_B_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross add_mult_A_B_cr                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross add_cin_cr                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross shifting_cr                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross or_xor_redopA                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross or_xor_redopB                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross invalid_cr                                  100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/alsu_coverage_pkg::alsu_coverage::alsu_cvg  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                      224          1          -    Covered              
        bin A_data_max                                    268          1          -    Covered              
        bin A_data_min                                     78          1          -    Covered              
        bin A_data_walkingones[-4]                         39          1          -    Covered              
        bin A_data_walkingones[1]                          58          1          -    Covered              
        bin A_data_walkingones[2]                          57          1          -    Covered              
        default bin A_data_default                        217                     -    Occurred             
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                      264          1          -    Covered              
        bin B_data_max                                    261          1          -    Covered              
        bin B_data_min                                     92          1          -    Covered              
        bin B_data_walkingones[-4]                         27          1          -    Covered              
        bin B_data_walkingones[1]                          27          1          -    Covered              
        bin B_data_walkingones[2]                          23          1          -    Covered              
        default bin B_data_default                        213                     -    Occurred             
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin Bins_invalid[INVALID_6]                48                     -    Occurred             
        illegal_bin Bins_invalid[INVALID_7]                49                     -    Occurred             
        bin Bins_shift[SHIFT]                             156          1          -    Covered              
        bin Bins_shift[ROTATE]                            148          1          -    Covered              
        bin Bins_arith[ADD]                               149          1          -    Covered              
        bin Bins_arith[MULT]                              144          1          -    Covered              
        bin Bins_bitwise[OR]                              136          1          -    Covered              
        bin Bins_bitwise[XOR]                             177          1          -    Covered              
        bin Bins_trans[OR=>XOR=>ADD=>MULT=>SHIFT=>ROTATE] 
                                                            1          1          -    Covered              
    Coverpoint cin_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       487          1          -    Covered              
        bin auto[1]                                       520          1          -    Covered              
    Coverpoint serialin_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       478          1          -    Covered              
        bin auto[1]                                       529          1          -    Covered              
    Coverpoint red_op_A_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       589          1          -    Covered              
        bin auto[1]                                       418          1          -    Covered              
    Coverpoint red_op_B_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       577          1          -    Covered              
        bin auto[1]                                       430          1          -    Covered              
    Cross add_mult_A_B_cr                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin A_B_permutations                          292          1          -    Covered              
    Cross add_cin_cr                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin add_cin1                                   74          1          -    Covered              
            bin add_cin0                                   75          1          -    Covered              
    Cross shifting_cr                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin shifting_s1                                92          1          -    Covered              
            bin shifting_s0                                64          1          -    Covered              
    Cross or_xor_redopA                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin or_xor_crA                                 87          1          -    Covered              
    Cross or_xor_redopB                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin or_xor_crB                                 45          1          -    Covered              
    Cross invalid_cr                                  100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin invalid_case                              444          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /alsu_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_coverage.sv
    1                                                package alsu_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    import alsu_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class alsu_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(alsu_coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(alsu_seq_item) cov_export;
    10                                                       uvm_tlm_analysis_fifo #(alsu_seq_item) cov_fifo;
    11                                                       alsu_seq_item seq_item_cov;
    12                                               
    13                                                       //covergroups
    14                                                       covergroup alsu_cvg;
    15                                                           A_cp: coverpoint seq_item_cov.A 
    16                                                           {
    17                                                               bins A_data_0 = {ZERO};
    18                                                               bins A_data_max = {MAXPOS};
    19                                                               bins A_data_min = {MAXNEG};
    20                                                               bins A_data_walkingones[] = {1,2,-4} iff(seq_item_cov.red_op_A);
    21                                                               bins A_data_default = default;
    22                                                           }
    23                                               
    24                                                           B_cp: coverpoint seq_item_cov.B
    25                                                           {
    26                                                               bins B_data_0 = {ZERO};
    27                                                               bins B_data_max = {MAXPOS};
    28                                                               bins B_data_min = {MAXNEG};
    29                                                               bins B_data_walkingones[] = {1,2,-4} iff(!seq_item_cov.red_op_A && seq_item_cov.red_op_B);
    30                                                               bins B_data_default = default;
    31                                                           }
    32                                               
    33                                                           ALU_cp: coverpoint seq_item_cov.opcode
    34                                                           {
    35                                                               bins Bins_shift[] = {[SHIFT:ROTATE]};
    36                                                               bins Bins_arith[] = {[ADD:MULT]};
    37                                                               bins Bins_bitwise[] = {[OR:XOR]};
    38                                                               illegal_bins Bins_invalid[] = {INVALID_6,INVALID_7};
    39                                                               bins Bins_trans[] =(OR => XOR => ADD => MULT => SHIFT => ROTATE);
    40                                                           }
    41                                               
    42                                                           cin_cp: coverpoint seq_item_cov.cin;
    43                                                           serialin_cp: coverpoint seq_item_cov.serial_in;
    44                                                           red_op_A_cp: coverpoint seq_item_cov.red_op_A;
    45                                                           red_op_B_cp: coverpoint seq_item_cov.red_op_B;
    46                                               
    47                                                           add_mult_A_B_cr: cross A_cp , B_cp , ALU_cp
    48                                                           {
    49                                                               option.cross_auto_bin_max=0;
    50                                                               bins A_B_permutations = (binsof(A_cp.A_data_0) || binsof(A_cp.A_data_max) || binsof(A_cp.A_data_min))
    51                                                               && (binsof(B_cp.B_data_0) || binsof(B_cp.B_data_max) || binsof(B_cp.B_data_min)) && (binsof(ALU_cp.Bins_arith));
    52                                                           }
    53                                               
    54                                                           add_cin_cr: cross ALU_cp , cin_cp
    55                                                           {
    56                                                               option.cross_auto_bin_max=0;
    57                                                               bins add_cin1 = binsof(ALU_cp) intersect {ADD} && binsof(cin_cp) intersect {1};
    58                                                               bins add_cin0 = binsof(ALU_cp) intersect {ADD} && binsof(cin_cp) intersect {0};
    59                                                           }
    60                                               
    61                                                           shifting_cr: cross ALU_cp , serialin_cp
    62                                                           {
    63                                                               option.cross_auto_bin_max=0;
    64                                                               bins shifting_s1 = binsof(ALU_cp) intersect {SHIFT} && binsof(serialin_cp) intersect{1};
    65                                                               bins shifting_s0 = binsof(ALU_cp) intersect {SHIFT} && binsof(serialin_cp) intersect{0};
    66                                                           }
    67                                               
    68                                                           or_xor_redopA: cross ALU_cp , red_op_A_cp , A_cp , B_cp
    69                                                           {
    70                                                               option.cross_auto_bin_max=0;
    71                                                               bins or_xor_crA = binsof(ALU_cp.Bins_bitwise) && binsof(red_op_A_cp) intersect{1} && binsof(A_cp.A_data_walkingones) && binsof(B_cp.B_data_0);
    72                                                           }
    73                                               
    74                                                           or_xor_redopB: cross ALU_cp , red_op_B_cp , A_cp , B_cp
    75                                                           {
    76                                                               option.cross_auto_bin_max=0;
    77                                                               bins or_xor_crB = binsof(ALU_cp.Bins_bitwise) && binsof(red_op_B_cp) intersect{1} && binsof(B_cp.B_data_walkingones) && binsof(A_cp.A_data_0);
    78                                                           }
    79                                               
    80                                                           invalid_cr : cross ALU_cp , red_op_B_cp , red_op_A_cp
    81                                                           {
    82                                                               option.cross_auto_bin_max=0;
    83                                                               bins invalid_case = (binsof(ALU_cp.Bins_shift) || binsof(ALU_cp.Bins_arith)) && (binsof(red_op_A_cp) intersect{1} || binsof(red_op_B_cp) intersect{1});
    84                                                           }
    85                                                       endgroup
    86                                               
    87                                                       //constructor
    88                                                       function new(string name = "alsu_coverage" , uvm_component parent = null);
    89              1                          1                 super.new(name,parent);
    90              1                          1                 alsu_cvg = new();
    91                                                       endfunction
    92                                               
    93                                                       //build_phase
    94                                                       function void build_phase(uvm_phase phase);
    95              1                          1                 super.build_phase(phase);
    96              1                          1                 cov_export = new("cov_export",this);
    97              1                          1                 cov_fifo = new("cov_fifo",this);
    98                                                       endfunction
    99                                                       
    100                                                      //connect_phase
    101                                                      function void connect_phase(uvm_phase phase);
    102             1                          1                 super.connect_phase(phase);
    103             1                          1                 cov_export.connect(cov_fifo.analysis_export);
    104                                                      endfunction
    105                                              
    106                                                      //run phase
    107                                                      task run_phase(uvm_phase phase);
    108             1                          1                 super.run_phase(phase);
    109             1                          1                 forever begin
    110             1                       1008                    cov_fifo.get(seq_item_cov);
    111             1                       1007                    alsu_cvg.sample(); 


=================================================================================
=== Instance: /alsu_env_pkg
=== Design Unit: work.alsu_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /alsu_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_env.sv
    1                                                package alsu_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    import alsu_coverage_pkg::*;
    5                                                    import alsu_scoreboard_pkg::*;
    6                                                    import alsu_agent_pkg::*;
    7                                                    `include "uvm_macros.svh"
    8                                                
    9                                                    class alsu_env extends uvm_env;
    10              1                    ***0***             `uvm_component_utils(alsu_env)
    10              2                    ***0***     
    10              3                          2     
    11                                                       alsu_agent agt;
    12                                                       alsu_scoreboard sb;
    13                                                       alsu_coverage cov;
    14                                               
    15                                                       //constructor
    16                                                       function new(string name = "alsu_env" ,uvm_component parent = null);
    17              1                          1                 super.new(name,parent);
    18                                                       endfunction 
    19                                               
    20                                                       //build_phase
    21                                                       function void build_phase(uvm_phase phase);
    22              1                          1                 super.build_phase(phase);
    23              1                          1                 agt = alsu_agent::type_id::create("agt",this);
    24              1                          1                 sb = alsu_scoreboard::type_id::create("sb",this);
    25              1                          1                 cov = alsu_coverage::type_id::create("cov",this);
    26                                                       endfunction
    27                                               
    28                                                       //connect_phase
    29                                                       function void connect_phase(uvm_phase phase);
    30              1                          1                 super.connect_phase(phase);
    31              1                          1                 agt.agt_ap.connect(sb.sb_export);
    32              1                          1                 agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /alsu_test_pkg
=== Design Unit: work.alsu_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        12         5         7    41.66%

================================Branch Details================================

Branch Coverage for instance /alsu_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_test.sv
------------------------------------IF Branch------------------------------------
    31                                         1     Count coming in to IF
    31              1                    ***0***                 if (!uvm_config_db #(virtual alsu_interface)::get(this , "" , "ALSU_IF" , alsu_cfg.alsu_vif)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    32                                   ***0***     Count coming in to IF
    32              1                    ***0***                     `uvm_fatal("build_phase" , "Test - unable to get the virtual interface of ALSU from uvm_config_db");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    44                                         1     Count coming in to IF
    44              1                          1                 `uvm_info("run_phase", "reset_asserted" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                         1     Count coming in to IF
    46              1                          1                 `uvm_info("run_phase" , "reset_deasserted" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1                 `uvm_info("run_phase", "stimulus generation started" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1                 `uvm_info("run_phase", "stimulus generation ended" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        17         3    85.00%

================================Statement Details================================

Statement Coverage for instance /alsu_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_test.sv
    1                                                package alsu_test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    import alsu_env_pkg::*;
    5                                                    import alsu_main_sequence_pkg::*;
    6                                                    import alsu_rst_sequence_pkg::*;
    7                                                    import alsu_config_obj_pkg::*;
    8                                                    `include "uvm_macros.svh"
    9                                                
    10                                                   class alsu_test extends uvm_test;
    11              1                    ***0***             `uvm_component_utils(alsu_test)
    11              2                    ***0***     
    11              3                          4     
    12                                               
    13                                                       alsu_env my_env;
    14                                                       virtual alsu_interface alsu_vif;
    15                                                       alsu_config_obj alsu_cfg;
    16                                                       alsu_main_sequence main_seq;
    17                                                       alsu_rst_sequence rst_seq;
    18                                                       
    19                                                       //constructor
    20                                                       function new(string name = "alsu_test" ,uvm_component parent = null);
    21              1                          1                 super.new(name,parent);
    22                                                       endfunction 
    23                                               
    24                                                       //build phase
    25                                                       function void build_phase(uvm_phase phase);
    26              1                          1                 super.build_phase(phase);
    27              1                          1                 my_env = alsu_env::type_id::create("my_env",this);
    28              1                          1                 alsu_cfg = alsu_config_obj::type_id::create("alsu_cfg",this);
    29              1                          1                 main_seq = alsu_main_sequence::type_id::create("main_seq",this);
    30              1                          1                 rst_seq = alsu_rst_sequence::type_id::create("rst_seq",this);
    31                                                           if (!uvm_config_db #(virtual alsu_interface)::get(this , "" , "ALSU_IF" , alsu_cfg.alsu_vif)) begin
    32              1                    ***0***                     `uvm_fatal("build_phase" , "Test - unable to get the virtual interface of ALSU from uvm_config_db");
    33                                                           end
    34                                               
    35              1                          1                 uvm_config_db #(alsu_config_obj)::set(this , "*" , "CFG" , alsu_cfg);
    36                                                       endfunction
    37                                               
    38                                                       //run phase
    39                                                       task run_phase (uvm_phase phase);
    40              1                          1                 super.run_phase(phase);
    41              1                          1                 phase.raise_objection(this);
    42                                               
    43                                                           //reset seq
    44              1                          1                 `uvm_info("run_phase", "reset_asserted" , UVM_LOW)
    45              1                          1                 rst_seq.start(my_env.agt.sqr);
    46              1                          1                 `uvm_info("run_phase" , "reset_deasserted" , UVM_LOW)
    47                                               
    48                                                           //main_seq
    49              1                          1                 `uvm_info("run_phase", "stimulus generation started" , UVM_LOW)
    50              1                          1                 main_seq.start(my_env.agt.sqr);
    51              1                          1                 `uvm_info("run_phase", "stimulus generation ended" , UVM_LOW)
    52                                               
    53              1                          1                 phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /alsu_coverage_pkg/alsu_coverage/alsu_cvg       100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cin_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint serialin_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_op_A_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_op_B_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross add_mult_A_B_cr                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross add_cin_cr                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross shifting_cr                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross or_xor_redopA                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross or_xor_redopB                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross invalid_cr                                  100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/alsu_coverage_pkg::alsu_coverage::alsu_cvg  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                      224          1          -    Covered              
        bin A_data_max                                    268          1          -    Covered              
        bin A_data_min                                     78          1          -    Covered              
        bin A_data_walkingones[-4]                         39          1          -    Covered              
        bin A_data_walkingones[1]                          58          1          -    Covered              
        bin A_data_walkingones[2]                          57          1          -    Covered              
        default bin A_data_default                        217                     -    Occurred             
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                      264          1          -    Covered              
        bin B_data_max                                    261          1          -    Covered              
        bin B_data_min                                     92          1          -    Covered              
        bin B_data_walkingones[-4]                         27          1          -    Covered              
        bin B_data_walkingones[1]                          27          1          -    Covered              
        bin B_data_walkingones[2]                          23          1          -    Covered              
        default bin B_data_default                        213                     -    Occurred             
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin Bins_invalid[INVALID_6]                48                     -    Occurred             
        illegal_bin Bins_invalid[INVALID_7]                49                     -    Occurred             
        bin Bins_shift[SHIFT]                             156          1          -    Covered              
        bin Bins_shift[ROTATE]                            148          1          -    Covered              
        bin Bins_arith[ADD]                               149          1          -    Covered              
        bin Bins_arith[MULT]                              144          1          -    Covered              
        bin Bins_bitwise[OR]                              136          1          -    Covered              
        bin Bins_bitwise[XOR]                             177          1          -    Covered              
        bin Bins_trans[OR=>XOR=>ADD=>MULT=>SHIFT=>ROTATE] 
                                                            1          1          -    Covered              
    Coverpoint cin_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       487          1          -    Covered              
        bin auto[1]                                       520          1          -    Covered              
    Coverpoint serialin_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       478          1          -    Covered              
        bin auto[1]                                       529          1          -    Covered              
    Coverpoint red_op_A_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       589          1          -    Covered              
        bin auto[1]                                       418          1          -    Covered              
    Coverpoint red_op_B_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       577          1          -    Covered              
        bin auto[1]                                       430          1          -    Covered              
    Cross add_mult_A_B_cr                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin A_B_permutations                          292          1          -    Covered              
    Cross add_cin_cr                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin add_cin1                                   74          1          -    Covered              
            bin add_cin0                                   75          1          -    Covered              
    Cross shifting_cr                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin shifting_s1                                92          1          -    Covered              
            bin shifting_s0                                64          1          -    Covered              
    Cross or_xor_redopA                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin or_xor_crA                                 87          1          -    Covered              
    Cross or_xor_redopB                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin or_xor_crB                                 45          1          -    Covered              
    Cross invalid_cr                                  100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin invalid_case                              444          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/alsu_top/alsu_dut/alsu_SVA_inst/invalid_or_xor_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(104) 449 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/invalid_opcode_6_7_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(105)  87 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/bypass_A_assert_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(106)  25 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/bypass_B_assert_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(107)  24 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/bitwise_or_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(108)  62 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_A_or_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(109)  29 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_B_or_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(110)  15 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/bitwise_xor_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(111)  82 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_A_xor_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(112)  28 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_B_xor_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(113)  19 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/add_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(114)  28 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/mult_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(115)  27 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/shift_left_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(116)  29 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/shift_right_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(117)  10 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/rotate_left_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(118)  14 Covered   
/alsu_top/alsu_dut/alsu_SVA_inst/rotate_right_ass_cov 
                                         alsu_SVA Verilog  SVA  alsu_SVA.sv(119)  10 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 16

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/alsu_top/alsu_dut/alsu_SVA_inst/reset_assertion/rst_out_ass
                     alsu_SVA.sv(6)                     0          1
/alsu_top/alsu_dut/alsu_SVA_inst/reset_assertion/rst_leds_ass
                     alsu_SVA.sv(7)                     0          1
/alsu_top/alsu_dut/alsu_SVA_inst/invalid_or_xor_ass
                     alsu_SVA.sv(86)                  122          1
/alsu_top/alsu_dut/alsu_SVA_inst/invalid_opcode_6_7_ass
                     alsu_SVA.sv(87)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/bypass_A_assert
                     alsu_SVA.sv(88)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/bypass_B_assert
                     alsu_SVA.sv(89)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/bitwise_or_ass
                     alsu_SVA.sv(90)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_A_or_ass
                     alsu_SVA.sv(91)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_B_or_ass
                     alsu_SVA.sv(92)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/bitwise_xor_ass
                     alsu_SVA.sv(93)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_A_xor_ass
                     alsu_SVA.sv(94)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/red_op_B_xor_ass
                     alsu_SVA.sv(95)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/add_ass
                     alsu_SVA.sv(96)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/mult_ass
                     alsu_SVA.sv(97)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/shift_left_ass
                     alsu_SVA.sv(98)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/shift_right_ass
                     alsu_SVA.sv(99)                    0          1
/alsu_top/alsu_dut/alsu_SVA_inst/rotate_left_ass
                     alsu_SVA.sv(100)                   0          1
/alsu_top/alsu_dut/alsu_SVA_inst/rotate_right_ass
                     alsu_SVA.sv(101)                   0          1
/alsu_main_sequence_pkg/alsu_main_sequence/body/#ublk#157552951#18/immed__21
                     alsu_main_sequence.sv(21)          0          1
/alsu_main_sequence_pkg/alsu_main_sequence/body/#ublk#157552951#27/immed__32
                     alsu_main_sequence.sv(32)          0          1

Total Coverage By Instance (filtered view): 86.58%

